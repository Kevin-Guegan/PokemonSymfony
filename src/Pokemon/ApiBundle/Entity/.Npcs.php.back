<?php
/**************************************************************************
 * Npcs.php, pokemon Android
 *
 * Copyright 2016
 * Description : 
 * Author(s)   : Harmony
 * Licence     : 
 * Last update : Jul 21, 2016
 *
 **************************************************************************/

namespace Pokemon\ApiBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use JMS\Serializer\Annotation as JSON;
use \DateTime;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Npcs
 *
 * @ORM\Table(name="pokemon_npcs")
 * @ORM\Entity(repositoryClass="Pokemon\ApiBundle\Repository\NpcsRepository")
 * @JSON\ExclusionPolicy("ALL")
 */
class Npcs
{
    /**
     * @ORM\ManyToOne(targetEntity="Dresseurs", inversedBy="npc")
     * @ORM\JoinColumn(name="DresseursnpcInternal_id", referencedColumnName="id")
     * @JSON\Expose
     * @JSON\Groups({"api_process"})
     * @JSON\Since("1.0")
     * @JSON\SerializedName("dresseursnpcInternal")
     
     * @var Dresseurs
     */
    private $dresseursnpcInternal;

    /**
     * @ORM\Column(name="id", type="integer")
     * @JSON\Expose
     * @JSON\Groups({"api_process"})
     * @JSON\Since("1.0")
     * @JSON\SerializedName("id")
     
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     * @var integer
     */
    private $id;

    /**
     * @ORM\Column(name="nom", type="string")
     * @JSON\Expose
     * @JSON\Groups({"api_process"})
     * @JSON\Since("1.0")
     * @JSON\SerializedName("nom")
     
     * @var string
     */
    private $nom;

    /**
     * @ORM\Column(name="profession", type="string")
     * @JSON\Expose
     * @JSON\Groups({"api_process"})
     * @JSON\Since("1.0")
     * @JSON\SerializedName("profession")
     
     * @var string
     */
    private $profession;

    /**
     * @ORM\Column(name="texte", type="string")
     * @JSON\Expose
     * @JSON\Groups({"api_process"})
     * @JSON\Since("1.0")
     * @JSON\SerializedName("texte")
     
     * @var string
     */
    private $texte;

    /**
     * @ORM\OneToMany(targetEntity="Pokemons", mappedBy="npcspokemonInternal")
     * @JSON\Expose
     * @JSON\Groups({"api_process"})
     * @JSON\Since("1.0")
     * @JSON\SerializedName("pokemon")
     
     * @var \Doctrine\Common\Collections\Collection
     */
    private $pokemon;

    /**
     * @ORM\ManyToMany(targetEntity="Badges")
     * @ORM\JoinTable(name="npcstoBadges",
     *      joinColumns={@ORM\JoinColumn(name="npcsInternalId_id", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="badge_id", referencedColumnName="id")}
     * )
     * @JSON\Expose
     * @JSON\Groups({"api_process"})
     * @JSON\Since("1.0")
     * @JSON\SerializedName("badge")
     
     * @var \Doctrine\Common\Collections\Collection
     */
    private $badge;

    /**
     * @ORM\ManyToMany(targetEntity="Objets")
     * @ORM\JoinTable(name="objetstoNpcs",
     *      joinColumns={@ORM\JoinColumn(name="npcsInternalId_id", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="objet_id", referencedColumnName="id")}
     * )
     * @JSON\Expose
     * @JSON\Groups({"api_process"})
     * @JSON\Since("1.0")
     * @JSON\SerializedName("objet")
     
     * @var \Doctrine\Common\Collections\Collection
     */
    private $objet;


    /**
     * Set dresseursnpcInternal
     *
     * @param \Pokemon\ApiBundle\Entity\Dresseurs $dresseursnpcInternal
     *
     * @return Npcs
     */
    public function setDresseursnpcInternal(\Pokemon\ApiBundle\Entity\Dresseurs $dresseursnpcInternal = null)
    {
        $this->dresseursnpcInternal = $dresseursnpcInternal;

        return $this;
    }

    /**
     * Get dresseursnpcInternal
     *
     * @return \Pokemon\ApiBundle\Entity\Dresseurs
     */
    public function getDresseursnpcInternal()
    {
        return $this->dresseursnpcInternal;
    }
    /**
     * Set id
     *
     * @param integer id
     *
     * @return Npcs
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get id
     *
     * @return Npcs
     */
    public function getId()
    {
        return $this->id;
    }
    /**
     * Set nom
     *
     * @param string nom
     *
     * @return Npcs
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get nom
     *
     * @return Npcs
     */
    public function getNom()
    {
        return $this->nom;
    }
    /**
     * Set profession
     *
     * @param string profession
     *
     * @return Npcs
     */
    public function setProfession($profession)
    {
        $this->profession = $profession;

        return $this;
    }

    /**
     * Get profession
     *
     * @return Npcs
     */
    public function getProfession()
    {
        return $this->profession;
    }
    /**
     * Set texte
     *
     * @param string texte
     *
     * @return Npcs
     */
    public function setTexte($texte)
    {
        $this->texte = $texte;

        return $this;
    }

    /**
     * Get texte
     *
     * @return Npcs
     */
    public function getTexte()
    {
        return $this->texte;
    }
    /**
     * Add pokemon
     *
     * @param \{project_name?cap_first}\ApiBundle\Entity\Pokemons $pokemon
     *
     * @return Npcs
     */
    public function addPokemon(\Pokemon\ApiBundle\Entity\Pokemons $pokemon)
    {
        $this->pokemons[] = $pokemon;

        return $this;
    }

    /**
     * Remove pokemon
     *
     * @param \Pokemon\ApiBundle\Entity\Pokemons $pokemon
     */
    public function removePokemon(\Pokemon\ApiBundle\Entity\Pokemons $pokemon)
    {
        $this->pokemons->removeElement($pokemon);
    }

    /**
     * Get pokemons
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPokemon()
    {
        return $this->pokemon;
    }
    /**
     * Add badge
     *
     * @param \{project_name?cap_first}\ApiBundle\Entity\Badges $badge
     *
     * @return Npcs
     */
    public function addBadge(\Pokemon\ApiBundle\Entity\Badges $badge)
    {
        $this->badges[] = $badge;

        return $this;
    }

    /**
     * Remove badge
     *
     * @param \Pokemon\ApiBundle\Entity\Badges $badge
     */
    public function removeBadge(\Pokemon\ApiBundle\Entity\Badges $badge)
    {
        $this->badges->removeElement($badge);
    }

    /**
     * Get badges
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getBadge()
    {
        return $this->badge;
    }
    /**
     * Add objet
     *
     * @param \{project_name?cap_first}\ApiBundle\Entity\Objets $objet
     *
     * @return Npcs
     */
    public function addObjet(\Pokemon\ApiBundle\Entity\Objets $objet)
    {
        $this->objets[] = $objet;

        return $this;
    }

    /**
     * Remove objet
     *
     * @param \Pokemon\ApiBundle\Entity\Objets $objet
     */
    public function removeObjet(\Pokemon\ApiBundle\Entity\Objets $objet)
    {
        $this->objets->removeElement($objet);
    }

    /**
     * Get objets
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getObjet()
    {
        return $this->objet;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->pokemon = new \Doctrine\Common\Collections\ArrayCollection();
        $this->badge = new \Doctrine\Common\Collections\ArrayCollection();
        $this->objet = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
}